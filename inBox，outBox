在CLR中为了将一个值类型转换成一个引用类型，要使用一个名为装箱的机制。

下面总结了对值类型的一个实例进行装箱操作时内部发生的事:
1）在托管堆中分配好内存。分配的内存量是值类型的各个字段需要的内存量加上托管堆上的所有对象都有的两个额外成员(类型对象指针和同步块索引)需要的内存量。
2）值类型的字段复制到新的分配的堆内存。
3）返回对象的地址。现在，这个地址是对一个对象的引用，值类型现在转换成一个引用类型。

拆箱不是直接将装箱过程倒过来。拆箱的代价比装箱低得多。拆箱其实就是一个获取一个指针的过程，该指针指向包含在一个对象中的原始值类型(数据字段)。事实上，指针指向的是已装箱实例中的未装箱部分。所以，和装箱不同，拆箱不要求在内存中复制字节。还有一个重点就是，拆箱之后，往往会紧接着发生一次字段的复制操作。
